import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
df=pd.read_csv('uber.csv')
df
df = df.drop(['Unnamed: 0', 'key'], axis= 1) 
df.dropna(inplace=True)
df["pickup_datetime"]=pd.to_datetime(df["pickup_datetime"])
df['pickup_datetime']=df['pickup_datetime'].dt.year
plt.boxplot(df['fare_amount'])
q1=np.percentile(df["fare_amount"],25)
q3=np.percentile(df["fare_amount"],75)

df=df[(df["fare_amount"]>q1) & (df['fare_amount']<q3)]
plt.boxplot(df["fare_amount"])
df.corr()
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
x=df.drop("fare_amount",axis=1)

y=df["fare_amount"]
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=1)
model=LinearRegression()
model.fit(x_train,y_train)
predicted=model.predict(x_test)
model.score(x_test,y_test)
from sklearn.metrics import mean_squared_error,r2_score
r2=r2_score(y_test,predicted)
mean_sq_error=np.sqrt(mean_squared_error(predicted,y_test))
from sklearn.ensemble import RandomForestRegressor
random_model=RandomForestRegressor()
random_model.fit(x_test,y_test)
random_pred=random_model.predict(x_test)
random_r2=r2_score(y_test,random_pred)
random_r2
random_mean_sq_error=np.sqrt(mean_squared_error(random_pred,y_test))
random_mean_sq_error